module MUX2to1 (d0, d1, sel, y);
    input wire d0, d1, sel;
    output wire y;  
    wire seln;  
    wire and_d0;    
    wire and_d1;  

    not u0 (seln, sel);
    and u1 (and_d0, seln, d0);
    and u2 (and_d1, sel, d1);
    or u3 (y, and_d0, and_d1);
endmodule

module MUX4to1 (d0, d1, d2, d3, sel, y);
    input wire d0, d1, d2, d3;   
    input wire [1:0] sel;        
    output wire y;               

    wire y0, y1;                 
    MUX2to1 mux0 (.d0(d0), .d1(d1), .sel(sel[0]), .y(y0));
    MUX2to1 mux1 (.d0(d2), .d1(d3), .sel(sel[0]), .y(y1));
    MUX2to1 mux2 (.d0(y0), .d1(y1), .sel(sel[1]), .y(y));
endmodule

module MUX16to1 (d, sel, y);
    input wire [15:0] d;         
    input wire [3:0] sel;        
    output wire y;               
    wire y0, y1, y2, y3;         

    MUX4to1 mux0 (.d0(d[0]), .d1(d[1]), .d2(d[2]), .d3(d[3]), .sel(sel[1:0]), .y(y0));
    MUX4to1 mux1 (.d0(d[4]), .d1(d[5]), .d2(d[6]), .d3(d[7]), .sel(sel[1:0]), .y(y1));
    MUX4to1 mux2 (.d0(d[8]), .d1(d[9]), .d2(d[10]), .d3(d[11]), .sel(sel[1:0]), .y(y2));
    MUX4to1 mux3 (.d0(d[12]), .d1(d[13]), .d2(d[14]), .d3(d[15]), .sel(sel[1:0]), .y(y3));
    MUX4to1 mux4 (.d0(y0), .d1(y1), .d2(y2), .d3(y3), .sel(sel[3:2]), .y(y));
endmodule

module MUX32BIT (
    d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, 
    sel, y
);
    input wire [31:0] d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15;
    input wire [3:0] sel; 
    output wire [31:0] y;

    MUX16to1 mux0 (.d({d15[0], d14[0], d13[0], d12[0], d11[0], d10[0], d9[0], d8[0], d7[0], d6[0], d5[0], d4[0], d3[0], d2[0], d1[0], d0[0]}), .sel(sel), .y(y[0]));
    MUX16to1 mux1 (.d({d15[1], d14[1], d13[1], d12[1], d11[1], d10[1], d9[1], d8[1], d7[1], d6[1], d5[1], d4[1], d3[1], d2[1], d1[1], d0[1]}), .sel(sel), .y(y[1]));
    MUX16to1 mux2 (.d({d15[2], d14[2], d13[2], d12[2], d11[2], d10[2], d9[2], d8[2], d7[2], d6[2], d5[2], d4[2], d3[2], d2[2], d1[2], d0[2]}), .sel(sel), .y(y[2]));
    MUX16to1 mux3 (.d({d15[3], d14[3], d13[3], d12[3], d11[3], d10[3], d9[3], d8[3], d7[3], d6[3], d5[3], d4[3], d3[3], d2[3], d1[3], d0[3]}), .sel(sel), .y(y[3]));
    MUX16to1 mux4 (.d({d15[4], d14[4], d13[4], d12[4], d11[4], d10[4], d9[4], d8[4], d7[4], d6[4], d5[4], d4[4], d3[4], d2[4], d1[4], d0[4]}), .sel(sel), .y(y[4]));
    MUX16to1 mux5 (.d({d15[5], d14[5], d13[5], d12[5], d11[5], d10[5], d9[5], d8[5], d7[5], d6[5], d5[5], d4[5], d3[5], d2[5], d1[5], d0[5]}), .sel(sel), .y(y[5]));
    MUX16to1 mux6 (.d({d15[6], d14[6], d13[6], d12[6], d11[6], d10[6], d9[6], d8[6], d7[6], d6[6], d5[6], d4[6], d3[6], d2[6], d1[6], d0[6]}), .sel(sel), .y(y[6]));
    MUX16to1 mux7 (.d({d15[7], d14[7], d13[7], d12[7], d11[7], d10[7], d9[7], d8[7], d7[7], d6[7], d5[7], d4[7], d3[7], d2[7], d1[7], d0[7]}), .sel(sel), .y(y[7]));
    MUX16to1 mux8 (.d({d15[8], d14[8], d13[8], d12[8], d11[8], d10[8], d9[8], d8[8], d7[8], d6[8], d5[8], d4[8], d3[8], d2[8], d1[8], d0[8]}), .sel(sel), .y(y[8]));
    MUX16to1 mux9 (.d({d15[9], d14[9], d13[9], d12[9], d11[9], d10[9], d9[9], d8[9], d7[9], d6[9], d5[9], d4[9], d3[9], d2[9], d1[9], d0[9]}), .sel(sel), .y(y[9]));
    MUX16to1 mux10 (.d({d15[10], d14[10], d13[10], d12[10], d11[10], d10[10], d9[10], d8[10], d7[10], d6[10], d5[10], d4[10], d3[10], d2[10], d1[10], d0[10]}), .sel(sel), .y(y[10]));
    MUX16to1 mux11 (.d({d15[11], d14[11], d13[11], d12[11], d11[11], d10[11], d9[11], d8[11], d7[11], d6[11], d5[11], d4[11], d3[11], d2[11], d1[11], d0[11]}), .sel(sel), .y(y[11]));
    MUX16to1 mux12 (.d({d15[12], d14[12], d13[12], d12[12], d11[12], d10[12], d9[12], d8[12], d7[12], d6[12], d5[12], d4[12], d3[12], d2[12], d1[12], d0[12]}), .sel(sel), .y(y[12]));
    MUX16to1 mux13 (.d({d15[13], d14[13], d13[13], d12[13], d11[13], d10[13], d9[13], d8[13], d7[13], d6[13], d5[13], d4[13], d3[13], d2[13], d1[13], d0[13]}), .sel(sel), .y(y[13]));
    MUX16to1 mux14 (.d({d15[14], d14[14], d13[14], d12[14], d11[14], d10[14], d9[14], d8[14], d7[14], d6[14], d5[14], d4[14], d3[14], d2[14], d1[14], d0[14]}), .sel(sel), .y(y[14]));
    MUX16to1 mux15 (.d({d15[15], d14[15], d13[15], d12[15], d11[15], d10[15], d9[15], d8[15], d7[15], d6[15], d5[15], d4[15], d3[15], d2[15], d1[15], d0[15]}), .sel(sel), .y(y[15]));
    MUX16to1 mux16 (.d({d15[16], d14[16], d13[16], d12[16], d11[16], d10[16], d9[16], d8[16], d7[16], d6[16], d5[16], d4[16], d3[16], d2[16], d1[16], d0[16]}), .sel(sel), .y(y[16]));
    MUX16to1 mux17 (.d({d15[17], d14[17], d13[17], d12[17], d11[17], d10[17], d9[17], d8[17], d7[17], d6[17], d5[17], d4[17], d3[17], d2[17], d1[17], d0[17]}), .sel(sel), .y(y[17]));
    MUX16to1 mux18 (.d({d15[18], d14[18], d13[18], d12[18], d11[18], d10[18], d9[18], d8[18], d7[18], d6[18], d5[18], d4[18], d3[18], d2[18], d1[18], d0[18]}), .sel(sel), .y(y[18]));
    MUX16to1 mux19 (.d({d15[19], d14[19], d13[19], d12[19], d11[19], d10[19], d9[19], d8[19], d7[19], d6[19], d5[19], d4[19], d3[19], d2[19], d1[19], d0[19]}), .sel(sel), .y(y[19]));
    MUX16to1 mux20 (.d({d15[20], d14[20], d13[20], d12[20], d11[20], d10[20], d9[20], d8[20], d7[20], d6[20], d5[20], d4[20], d3[20], d2[20], d1[20], d0[20]}), .sel(sel), .y(y[20]));
    MUX16to1 mux21 (.d({d15[21], d14[21], d13[21], d12[21], d11[21], d10[21], d9[21], d8[21], d7[21], d6[21], d5[21], d4[21], d3[21], d2[21], d1[21], d0[21]}), .sel(sel), .y(y[21]));
    MUX16to1 mux22 (.d({d15[22], d14[22], d13[22], d12[22], d11[22], d10[22], d9[22], d8[22], d7[22], d6[22], d5[22], d4[22], d3[22], d2[22], d1[22], d0[22]}), .sel(sel), .y(y[22]));
    MUX16to1 mux23 (.d({d15[23], d14[23], d13[23], d12[23], d11[23], d10[23], d9[23], d8[23], d7[23], d6[23], d5[23], d4[23], d3[23], d2[23], d1[23], d0[23]}), .sel(sel), .y(y[23]));
    MUX16to1 mux24 (.d({d15[24], d14[24], d13[24], d12[24], d11[24], d10[24], d9[24], d8[24], d7[24], d6[24], d5[24], d4[24], d3[24], d2[24], d1[24], d0[24]}), .sel(sel), .y(y[24]));
    MUX16to1 mux25 (.d({d15[25], d14[25], d13[25], d12[25], d11[25], d10[25], d9[25], d8[25], d7[25], d6[25], d5[25], d4[25], d3[25], d2[25], d1[25], d0[25]}), .sel(sel), .y(y[25]));
    MUX16to1 mux26 (.d({d15[26], d14[26], d13[26], d12[26], d11[26], d10[26], d9[26], d8[26], d7[26], d6[26], d5[26], d4[26], d3[26], d2[26], d1[26], d0[26]}), .sel(sel), .y(y[26]));
    MUX16to1 mux27 (.d({d15[27], d14[27], d13[27], d12[27], d11[27], d10[27], d9[27], d8[27], d7[27], d6[27], d5[27], d4[27], d3[27], d2[27], d1[27], d0[27]}), .sel(sel), .y(y[27]));
    MUX16to1 mux28 (.d({d15[28], d14[28], d13[28], d12[28], d11[28], d10[28], d9[28], d8[28], d7[28], d6[28], d5[28], d4[28], d3[28], d2[28], d1[28], d0[28]}), .sel(sel), .y(y[28]));
    MUX16to1 mux29 (.d({d15[29], d14[29], d13[29], d12[29], d11[29], d10[29], d9[29], d8[29], d7[29], d6[29], d5[29], d4[29], d3[29], d2[29], d1[29], d0[29]}), .sel(sel), .y(y[29]));
    MUX16to1 mux30 (.d({d15[30], d14[30], d13[30], d12[30], d11[30], d10[30], d9[30], d8[30], d7[30], d6[30], d5[30], d4[30], d3[30], d2[30], d1[30], d0[30]}), .sel(sel), .y(y[30]));
    MUX16to1 mux31 (.d({d15[31], d14[31], d13[31], d12[31], d11[31], d10[31], d9[31], d8[31], d7[31], d6[31], d5[31], d4[31], d3[31], d2[31], d1[31], d0[31]}), .sel(sel), .y(y[31]));
endmodule

